// <auto-generated />
using System;
using Boomerang.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Boomerang.Context.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190825195405_SeedPreDb")]
    partial class SeedPreDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Boomerang.Models.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Boomerang.Models.Models.ComplexWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("ComplexWords");
                });

            modelBuilder.Entity("Boomerang.Models.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Affils")
                        .IsRequired()
                        .HasColumnType("varchar(512)");

                    b.Property<int>("SectionId");

                    b.Property<int>("SiteId");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("SiteId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("Boomerang.Models.Models.IrcInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bot")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<int>("SiteId");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("IrcInfo");
                });

            modelBuilder.Entity("Boomerang.Models.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Applicability")
                        .HasColumnType("int");

                    b.Property<int?>("ComplexWordId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<int?>("WordId");

                    b.HasKey("Id");

                    b.HasIndex("ComplexWordId");

                    b.HasIndex("WordId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Boomerang.Models.Models.PackageEnrollment", b =>
                {
                    b.Property<int>("EnrollmentId");

                    b.Property<int>("PackageId");

                    b.HasKey("EnrollmentId", "PackageId");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageEnrollments");
                });

            modelBuilder.Entity("Boomerang.Models.Models.PreDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bot")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("PreDbs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bot = "SIDB",
                            Channel = "#scumm-pre",
                            IsEnabled = true,
                            Name = "SI-DB"
                        });
                });

            modelBuilder.Entity("Boomerang.Models.Models.Release", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Releases");
                });

            modelBuilder.Entity("Boomerang.Models.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BubbleLevel")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Delimiter")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)))
                        .HasColumnType("char");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<int>("RaceActivityInSeconds")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Boomerang.Models.Models.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxDownloadLogins")
                        .HasColumnType("int");

                    b.Property<int>("MaxUploadLogins")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(16)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<int>("Status");

                    b.Property<int>("TotalLogins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("Boomerang.Models.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<int?>("ComplexWordId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("IgnorePattern")
                        .HasColumnType("varchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasColumnType("varchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("ComplexWordId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Boomerang.Models.Models.Enrollment", b =>
                {
                    b.HasOne("Boomerang.Models.Models.Section", "Section")
                        .WithMany("Enrollments")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Boomerang.Models.Models.Site", "Site")
                        .WithMany("Enrollments")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Boomerang.Models.Models.IrcInfo", b =>
                {
                    b.HasOne("Boomerang.Models.Models.Site", "Site")
                        .WithMany("IrcInfo")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Boomerang.Models.Models.Package", b =>
                {
                    b.HasOne("Boomerang.Models.Models.ComplexWord", "ComplexWord")
                        .WithMany("Packages")
                        .HasForeignKey("ComplexWordId");

                    b.HasOne("Boomerang.Models.Models.Word", "Word")
                        .WithMany("Packages")
                        .HasForeignKey("WordId");
                });

            modelBuilder.Entity("Boomerang.Models.Models.PackageEnrollment", b =>
                {
                    b.HasOne("Boomerang.Models.Models.Enrollment", "Enrollment")
                        .WithMany("Packages")
                        .HasForeignKey("EnrollmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Boomerang.Models.Models.Package", "Package")
                        .WithMany("Enrollments")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Boomerang.Models.Models.Section", b =>
                {
                    b.HasOne("Boomerang.Models.Models.Category", "Category")
                        .WithMany("Sections")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Boomerang.Models.Models.Word", b =>
                {
                    b.HasOne("Boomerang.Models.Models.ComplexWord", "ComplexWord")
                        .WithMany("Words")
                        .HasForeignKey("ComplexWordId");
                });
#pragma warning restore 612, 618
        }
    }
}
